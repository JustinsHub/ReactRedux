{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/React/react-3/starwarsly/src/Person.js\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { getPersonFromAPI } from \"./actions/people\";\nimport Sublist from \"./Sublist\";\n\nfunction Person() {\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const person = useSelector(st => st.people[id]);\n  const planetState = useSelector(st => st.planets);\n  const filmState = useSelector(st => st.films);\n  const missing = !person;\n  useEffect(function () {\n    if (missing) {\n      dispatch(getPersonFromAPI(id));\n    }\n  }, [id, missing, dispatch]);\n  if (missing) return \"loading...\";\n  const hw = person.homeworld;\n  const homeworld = {\n    id: hw,\n    url: `/planets/${hw}`,\n    display: planetState[hw] ? planetState[hw].name : \"Unknown\"\n  };\n  const films = person.films.map(fid => ({\n    id: fid,\n    url: `/films/${fid}`,\n    display: filmState[fid] ? filmState[fid].name : \"Unknown\"\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"my-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, person.name, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, person.id)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }\n  }, \"Gender: \"), person.gender), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 10\n    }\n  }, \"Birth Year: \"), person.birthYear), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Homeworld: \"), /*#__PURE__*/React.createElement(Link, {\n    to: homeworld.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, homeworld.display)), /*#__PURE__*/React.createElement(Sublist, {\n    title: \"Films\",\n    items: films,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Person;","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/React/react-3/starwarsly/src/Person.js"],"names":["React","useEffect","useDispatch","useSelector","Link","useParams","getPersonFromAPI","Sublist","Person","dispatch","id","person","st","people","planetState","planets","filmState","films","missing","hw","homeworld","url","display","name","map","fid","gender","birthYear"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport { getPersonFromAPI } from \"./actions/people\";\nimport Sublist from \"./Sublist\";\n\n\nfunction Person() {\n  \n  const dispatch = useDispatch();\n  const {id} = useParams();\n  const person = useSelector(st => st.people[id]);\n  const planetState = useSelector(st => st.planets);\n  const filmState = useSelector(st => st.films);\n  const missing = !person;\n\n  useEffect(function() {\n    if (missing) {\n      dispatch(getPersonFromAPI(id));\n    }\n  }, [id, missing, dispatch]);\n\n  if (missing) return \"loading...\";\n\n  const hw = person.homeworld;\n  const homeworld = {\n    id: hw,\n    url: `/planets/${hw}`,\n    display: planetState[hw] ? planetState[hw].name : \"Unknown\"\n  };\n\n  const films = person.films.map(fid => ({\n    id: fid,\n    url: `/films/${fid}`,\n    display: filmState[fid] ? filmState[fid].name : \"Unknown\"\n  }));\n\n  return (\n    <div>\n      <h1 className=\"my-3\">\n        {person.name}\n        <small className=\"text-muted float-right\">{person.id}</small>\n      </h1>\n\n      <p><b>Gender: </b>{person.gender}</p>\n      <p><b>Birth Year: </b>{person.birthYear}</p>\n      <p>\n        <b>Homeworld: </b>\n        <Link to={homeworld.url}>{homeworld.display}</Link>\n      </p>\n\n      <Sublist title=\"Films\" items={films} />\n    </div>\n  );\n}\n\nexport default Person;\n\n"]},"metadata":{},"sourceType":"module"}