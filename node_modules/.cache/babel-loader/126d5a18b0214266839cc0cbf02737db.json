{"ast":null,"code":"var _jsxFileName = \"/Users/anyone/Desktop/Coding/SB Bootcamp/React/react-3/starwarsly/src/Film.js\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getFilmFromAPI } from \"./actions/films\";\nimport Sublist from \"./Sublist\";\n\nfunction Film() {\n  const {\n    id\n  } = useParams();\n  const film = useSelector(st => st.films[id]);\n  const planetState = useSelector(st => st.planets);\n  const characterState = useSelector(st => st.people);\n  const dispatch = useDispatch();\n  const missing = !film; //initial API film request when page is loaded based on params id. \n\n  useEffect(function () {\n    if (missing) {\n      dispatch(getFilmFromAPI(id));\n    }\n  }, [missing, id, dispatch]);\n  if (missing) return /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 23\n    }\n  }, \"loading...\");\n  const planets = film.planets.map(pid => ({\n    id: pid,\n    url: `/planets/${pid}`,\n    display: planetState[pid] ? planetState[pid].name : \"Unknown\"\n  }));\n  const characters = film.characters.map(cid => ({\n    id: cid,\n    url: `/people/${cid}`,\n    display: characterState[cid] ? characterState[cid].name : \"Unknown\"\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"mt-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, film.name, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"text-muted float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, id)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, film.openingCrawl), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 10\n    }\n  }, \"Director: \"), film.director), /*#__PURE__*/React.createElement(Sublist, {\n    title: \"Planets\",\n    items: planets,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Sublist, {\n    title: \"People\",\n    items: characters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Film;","map":{"version":3,"sources":["/Users/anyone/Desktop/Coding/SB Bootcamp/React/react-3/starwarsly/src/Film.js"],"names":["React","useEffect","useSelector","useDispatch","useParams","getFilmFromAPI","Sublist","Film","id","film","st","films","planetState","planets","characterState","people","dispatch","missing","map","pid","url","display","name","characters","cid","openingCrawl","director"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAGA,SAASC,IAAT,GAAgB;AAEd,QAAM;AAACC,IAAAA;AAAD,MAAOJ,SAAS,EAAtB;AACA,QAAMK,IAAI,GAAGP,WAAW,CAACQ,EAAE,IAAIA,EAAE,CAACC,KAAH,CAASH,EAAT,CAAP,CAAxB;AACA,QAAMI,WAAW,GAAGV,WAAW,CAACQ,EAAE,IAAIA,EAAE,CAACG,OAAV,CAA/B;AACA,QAAMC,cAAc,GAAGZ,WAAW,CAACQ,EAAE,IAAIA,EAAE,CAACK,MAAV,CAAlC;AACA,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,OAAO,GAAG,CAACR,IAAjB,CAPc,CASd;;AACAR,EAAAA,SAAS,CAAC,YAAW;AACnB,QAAIgB,OAAJ,EAAa;AACXD,MAAAA,QAAQ,CAACX,cAAc,CAACG,EAAD,CAAf,CAAR;AACD;AACF,GAJQ,EAIN,CAACS,OAAD,EAAUT,EAAV,EAAcQ,QAAd,CAJM,CAAT;AAMA,MAAIC,OAAJ,EAAa,oBAAO;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,QAAMJ,OAAO,GAAGJ,IAAI,CAACI,OAAL,CAAaK,GAAb,CAAiBC,GAAG,KAAK;AACvCX,IAAAA,EAAE,EAAEW,GADmC;AAEvCC,IAAAA,GAAG,EAAG,YAAWD,GAAI,EAFkB;AAGvCE,IAAAA,OAAO,EAAET,WAAW,CAACO,GAAD,CAAX,GAAmBP,WAAW,CAACO,GAAD,CAAX,CAAiBG,IAApC,GAA2C;AAHb,GAAL,CAApB,CAAhB;AAMA,QAAMC,UAAU,GAAGd,IAAI,CAACc,UAAL,CAAgBL,GAAhB,CAAoBM,GAAG,KAAK;AAC7ChB,IAAAA,EAAE,EAAEgB,GADyC;AAE7CJ,IAAAA,GAAG,EAAG,WAAUI,GAAI,EAFyB;AAG7CH,IAAAA,OAAO,EAAEP,cAAc,CAACU,GAAD,CAAd,GAAsBV,cAAc,CAACU,GAAD,CAAd,CAAoBF,IAA1C,GAAiD;AAHb,GAAL,CAAvB,CAAnB;AAMA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,IAAI,CAACa,IADR,eAEE;AAAO,IAAA,SAAS,EAAC,wBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2Cd,EAA3C,CAFF,CAFF,eAOE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBC,IAAI,CAACgB,YAA1B,CAPF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,EAAqBhB,IAAI,CAACiB,QAA1B,CATF,eAWE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,KAAK,EAAEb,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAwB,IAAA,KAAK,EAAEU,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADF;AAgBD;;AAED,eAAehB,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport { getFilmFromAPI } from \"./actions/films\";\nimport Sublist from \"./Sublist\";\n\n\nfunction Film() {\n\n  const {id} = useParams();\n  const film = useSelector(st => st.films[id]);\n  const planetState = useSelector(st => st.planets);\n  const characterState = useSelector(st => st.people);\n  const dispatch = useDispatch();\n  const missing = !film;\n\n  //initial API film request when page is loaded based on params id. \n  useEffect(function() {\n    if (missing) {\n      dispatch(getFilmFromAPI(id));\n    }\n  }, [missing, id, dispatch]);\n\n  if (missing) return <h1 className=\"mt-5\">loading...</h1>;\n\n  const planets = film.planets.map(pid => ({\n    id: pid,\n    url: `/planets/${pid}`,\n    display: planetState[pid] ? planetState[pid].name : \"Unknown\"\n  }));\n\n  const characters = film.characters.map(cid => ({\n    id: cid,\n    url: `/people/${cid}`,\n    display: characterState[cid] ? characterState[cid].name : \"Unknown\"\n  }));\n\n  return (\n    <div>\n\n      <h1 className=\"mt-3 mb-3\">\n        {film.name}\n        <small className=\"text-muted float-right\">{id}</small>\n      </h1>\n\n      <p className=\"lead\">{film.openingCrawl}</p>\n\n      <p><b>Director: </b>{film.director}</p>\n\n      <Sublist title=\"Planets\" items={planets} />\n      <Sublist title=\"People\" items={characters} />\n    </div>\n  );\n}\n\nexport default Film;"]},"metadata":{},"sourceType":"module"}